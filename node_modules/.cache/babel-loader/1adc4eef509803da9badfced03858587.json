{"remainingRequest":"/Users/crocslut/Desktop/Git/primevue/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/primevue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/primevue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/primevue/src/views/floatlabel/FloatLabelDemo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/primevue/src/views/floatlabel/FloatLabelDemo.vue","mtime":1634633311616},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/cache-loader/dist/cjs.js","mtime":1634631121968},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/babel-loader/lib/index.js","mtime":1634631121902},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/cache-loader/dist/cjs.js","mtime":1634631121968},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/vue-loader-v16/dist/index.js","mtime":1634631132147}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvY3JvY3NsdXQvRGVza3RvcC9HaXQvcHJpbWV2dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0IENvdW50cnlTZXJ2aWNlIGZyb20gJy4uLy4uL3NlcnZpY2UvQ291bnRyeVNlcnZpY2UnOwppbXBvcnQgTm9kZVNlcnZpY2UgZnJvbSAnLi4vLi4vc2VydmljZS9Ob2RlU2VydmljZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY291bnRyaWVzOiBudWxsLAogICAgICBmaWx0ZXJlZENvdW50cmllczogbnVsbCwKICAgICAgY2l0aWVzOiBbewogICAgICAgIG5hbWU6ICdOZXcgWW9yaycsCiAgICAgICAgY29kZTogJ05ZJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ1JvbWUnLAogICAgICAgIGNvZGU6ICdSTScKICAgICAgfSwgewogICAgICAgIG5hbWU6ICdMb25kb24nLAogICAgICAgIGNvZGU6ICdMRE4nCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnSXN0YW5idWwnLAogICAgICAgIGNvZGU6ICdJU1QnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnUGFyaXMnLAogICAgICAgIGNvZGU6ICdQUlMnCiAgICAgIH1dLAogICAgICB2YWx1ZTE6IG51bGwsCiAgICAgIHZhbHVlMjogbnVsbCwKICAgICAgdmFsdWUzOiBudWxsLAogICAgICB2YWx1ZTQ6IG51bGwsCiAgICAgIHZhbHVlNTogbnVsbCwKICAgICAgdmFsdWU2OiBudWxsLAogICAgICB2YWx1ZTc6IG51bGwsCiAgICAgIHZhbHVlODogbnVsbCwKICAgICAgdmFsdWU5OiBudWxsLAogICAgICB2YWx1ZTEwOiBudWxsLAogICAgICB2YWx1ZTExOiBudWxsLAogICAgICB2YWx1ZUljb25MZWZ0OiBudWxsLAogICAgICB2YWx1ZUljb25SaWdodDogbnVsbCwKICAgICAgc2VsZWN0ZWRDaXR5OiBudWxsLAogICAgICBub2RlczogbnVsbCwKICAgICAgc2VsZWN0ZWROb2RlOiBudWxsLAogICAgICBjYXNjYWRlQ291bnRyaWVzOiBbewogICAgICAgIG5hbWU6ICdBdXN0cmFsaWEnLAogICAgICAgIGNvZGU6ICdBVScsCiAgICAgICAgc3RhdGVzOiBbewogICAgICAgICAgbmFtZTogJ05ldyBTb3V0aCBXYWxlcycsCiAgICAgICAgICBjaXRpZXM6IFt7CiAgICAgICAgICAgIGNuYW1lOiAnU3lkbmV5JywKICAgICAgICAgICAgY29kZTogJ0EtU1knCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGNuYW1lOiAnTmV3Y2FzdGxlJywKICAgICAgICAgICAgY29kZTogJ0EtTkUnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGNuYW1lOiAnV29sbG9uZ29uZycsCiAgICAgICAgICAgIGNvZGU6ICdBLVdPJwogICAgICAgICAgfV0KICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnUXVlZW5zbGFuZCcsCiAgICAgICAgICBjaXRpZXM6IFt7CiAgICAgICAgICAgIGNuYW1lOiAnQnJpc2JhbmUnLAogICAgICAgICAgICBjb2RlOiAnQS1CUicKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgY25hbWU6ICdUb3duc3ZpbGxlJywKICAgICAgICAgICAgY29kZTogJ0EtVE8nCiAgICAgICAgICB9XQogICAgICAgIH1dCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnQ2FuYWRhJywKICAgICAgICBjb2RlOiAnQ0EnLAogICAgICAgIHN0YXRlczogW3sKICAgICAgICAgIG5hbWU6ICdRdWViZWMnLAogICAgICAgICAgY2l0aWVzOiBbewogICAgICAgICAgICBjbmFtZTogJ01vbnRyZWFsJywKICAgICAgICAgICAgY29kZTogJ0MtTU8nCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGNuYW1lOiAnUXVlYmVjIENpdHknLAogICAgICAgICAgICBjb2RlOiAnQy1RVScKICAgICAgICAgIH1dCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ09udGFyaW8nLAogICAgICAgICAgY2l0aWVzOiBbewogICAgICAgICAgICBjbmFtZTogJ090dGF3YScsCiAgICAgICAgICAgIGNvZGU6ICdDLU9UJwogICAgICAgICAgfSwgewogICAgICAgICAgICBjbmFtZTogJ1Rvcm9udG8nLAogICAgICAgICAgICBjb2RlOiAnQy1UTycKICAgICAgICAgIH1dCiAgICAgICAgfV0KICAgICAgfSwgewogICAgICAgIG5hbWU6ICdVbml0ZWQgU3RhdGVzJywKICAgICAgICBjb2RlOiAnVVMnLAogICAgICAgIHN0YXRlczogW3sKICAgICAgICAgIG5hbWU6ICdDYWxpZm9ybmlhJywKICAgICAgICAgIGNpdGllczogW3sKICAgICAgICAgICAgY25hbWU6ICdMb3MgQW5nZWxlcycsCiAgICAgICAgICAgIGNvZGU6ICdVUy1MQScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgY25hbWU6ICdTYW4gRGllZ28nLAogICAgICAgICAgICBjb2RlOiAnVVMtU0QnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGNuYW1lOiAnU2FuIEZyYW5jaXNjbycsCiAgICAgICAgICAgIGNvZGU6ICdVUy1TRicKICAgICAgICAgIH1dCiAgICAgICAgfSwgewogICAgICAgICAgbmFtZTogJ0Zsb3JpZGEnLAogICAgICAgICAgY2l0aWVzOiBbewogICAgICAgICAgICBjbmFtZTogJ0phY2tzb252aWxsZScsCiAgICAgICAgICAgIGNvZGU6ICdVUy1KQScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgY25hbWU6ICdNaWFtaScsCiAgICAgICAgICAgIGNvZGU6ICdVUy1NSScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgY25hbWU6ICdUYW1wYScsCiAgICAgICAgICAgIGNvZGU6ICdVUy1UQScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgY25hbWU6ICdPcmxhbmRvJywKICAgICAgICAgICAgY29kZTogJ1VTLU9SJwogICAgICAgICAgfV0KICAgICAgICB9LCB7CiAgICAgICAgICBuYW1lOiAnVGV4YXMnLAogICAgICAgICAgY2l0aWVzOiBbewogICAgICAgICAgICBjbmFtZTogJ0F1c3RpbicsCiAgICAgICAgICAgIGNvZGU6ICdVUy1BVScKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgY25hbWU6ICdEYWxsYXMnLAogICAgICAgICAgICBjb2RlOiAnVVMtREEnCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGNuYW1lOiAnSG91c3RvbicsCiAgICAgICAgICAgIGNvZGU6ICdVUy1ITycKICAgICAgICAgIH1dCiAgICAgICAgfV0KICAgICAgfV0sCiAgICAgIHNvdXJjZXM6IHsKICAgICAgICAnb3B0aW9ucy1hcGknOiB7CiAgICAgICAgICB0YWJOYW1lOiAnT3B0aW9ucyBBUEkgU291cmNlJywKICAgICAgICAgIGNvbnRlbnQ6ICJcbjx0ZW1wbGF0ZT5cbiAgICA8ZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmx1aWQgcC1ncmlkXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0VGV4dCBpZD1cImlucHV0dGV4dFwiIHR5cGU9XCJ0ZXh0XCIgdi1tb2RlbD1cInZhbHVlMVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiaW5wdXR0ZXh0XCI+SW5wdXRUZXh0PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWwgcC1pbnB1dC1pY29uLWxlZnRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicGkgcGktc2VhcmNoXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFRleHQgaWQ9XCJpbnB1dHRleHQtbGVmdFwiIHR5cGU9XCJ0ZXh0XCIgdi1tb2RlbD1cInZhbHVlSWNvbkxlZnRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0dGV4dC1sZWZ0XCI+TGVmdCBJY29uPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbCBwLWlucHV0LWljb24tcmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicGkgcGktc2VhcmNoXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFRleHQgaWQ9XCJpbnB1dHRleHQtcmlnaHRcIiB0eXBlPVwidGV4dFwiIHYtbW9kZWw9XCJ2YWx1ZUljb25SaWdodFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiaW5wdXR0ZXh0LXJpZ2h0XCI+UmlnaHQgSWNvbjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QXV0b0NvbXBsZXRlIHYtbW9kZWw9XCJ2YWx1ZTJcIiA6c3VnZ2VzdGlvbnM9XCJmaWx0ZXJlZENvdW50cmllc1wiIEBjb21wbGV0ZT1cInNlYXJjaENvdW50cnkoJGV2ZW50KVwiIGZpZWxkPVwibmFtZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiYXV0b2NvbXBsZXRlXCI+QXV0b0NvbXBsZXRlPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxDYWxlbmRhciBpZD1cImNhbGVuZGFyXCIgdi1tb2RlbD1cInZhbHVlM1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiY2FsZW5kYXJcIj5DYWxlbmRhcjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Q2hpcHMgaWQ9XCJjaGlwc1wiIHYtbW9kZWw9XCJ2YWx1ZTRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImNoaXBzXCI+Q2hpcHM8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0TWFzayBpZD1cImlucHV0bWFza1wiIHYtbW9kZWw9XCJ2YWx1ZTVcIiBtYXNrPVwiOTkvOTkvOTk5OVwiIHNsb3RDaGFyPVwibW0vZGQveXl5eVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiaW5wdXRtYXNrXCI+SW5wdXRNYXNrPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dE51bWJlciBpZD1cImlucHV0bnVtYmVyXCIgdi1tb2RlbD1cInZhbHVlNlwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiaW5wdXRudW1iZXJcIj5JbnB1dE51bWJlcjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtaW5wdXRncm91cFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWlucHV0Z3JvdXAtYWRkb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInBpIHBpLXVzZXJcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRUZXh0IGlkPVwiaW5wdXRncm91cFwiIHR5cGU9XCJ0ZXh0XCIgdi1tb2RlbD1cInZhbHVlN1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0Z3JvdXBcIj5JbnB1dEdyb3VwPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxDYXNjYWRlU2VsZWN0IGlkPVwiY2FzY2FkZVNlbGVjdFwiIHYtbW9kZWw9XCJzZWxlY3RlZENpdHlcIiA6b3B0aW9ucz1cImNhc2NhZGVDb3VudHJpZXNcIiBvcHRpb25MYWJlbD1cImNuYW1lXCIgb3B0aW9uR3JvdXBMYWJlbD1cIm5hbWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpvcHRpb25Hcm91cENoaWxkcmVuPVwiWydzdGF0ZXMnLCAnY2l0aWVzJ11cIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cIm11bHRpc2VsZWN0XCI+Q2FzY2FkZVNlbGVjdDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8RHJvcGRvd24gaWQ9XCJkcm9wZG93blwiIHYtbW9kZWw9XCJ2YWx1ZThcIiA6b3B0aW9ucz1cImNpdGllc1wiIG9wdGlvbkxhYmVsPVwibmFtZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiZHJvcGRvd25cIj5Ecm9wZG93bjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TXVsdGlTZWxlY3QgaWQ9XCJtdWx0aXNlbGVjdFwiIHYtbW9kZWw9XCJ2YWx1ZTlcIiA6b3B0aW9ucz1cImNpdGllc1wiIG9wdGlvbkxhYmVsPVwibmFtZVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwibXVsdGlzZWxlY3RcIj5NdWx0aVNlbGVjdDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VHJlZVNlbGVjdCB2LW1vZGVsPVwic2VsZWN0ZWROb2RlXCIgOm9wdGlvbnM9XCJub2Rlc1wiPjwvVHJlZVNlbGVjdD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJ0cmVlc2VsZWN0XCI+VHJlZVNlbGVjdDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UGFzc3dvcmQgaWQ9XCJwYXNzd29yZFwiIHYtbW9kZWw9XCJ2YWx1ZTExXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJwYXNzd29yZFwiPlBhc3N3b3JkPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0YXJlYSBpZD1cInRleHRhcmVhXCIgdi1tb2RlbD1cInZhbHVlMTBcIiByb3dzPVwiM1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwidGV4dGFyZWFcIj5UZXh0YXJlYTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgIFxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCBDb3VudHJ5U2VydmljZSBmcm9tICcuL3NlcnZpY2UvQ291bnRyeVNlcnZpY2UnO1xuaW1wb3J0IE5vZGVTZXJ2aWNlIGZyb20gJy4vc2VydmljZS9Ob2RlU2VydmljZSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBkYXRhKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY291bnRyaWVzOiBudWxsLFxuICAgICAgICAgICAgZmlsdGVyZWRDb3VudHJpZXM6IG51bGwsXG4gICAgICAgICAgICBjaXRpZXM6IFtcbiAgICAgICAgICAgICAgICB7bmFtZTogJ05ldyBZb3JrJywgY29kZTogJ05ZJ30sXG4gICAgICAgICAgICAgICAge25hbWU6ICdSb21lJywgY29kZTogJ1JNJ30sXG4gICAgICAgICAgICAgICAge25hbWU6ICdMb25kb24nLCBjb2RlOiAnTEROJ30sXG4gICAgICAgICAgICAgICAge25hbWU6ICdJc3RhbmJ1bCcsIGNvZGU6ICdJU1QnfSxcbiAgICAgICAgICAgICAgICB7bmFtZTogJ1BhcmlzJywgY29kZTogJ1BSUyd9XG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgdmFsdWUxOiBudWxsLFxuICAgICAgICAgICAgdmFsdWUyOiBudWxsLFxuICAgICAgICAgICAgdmFsdWUzOiBudWxsLFxuICAgICAgICAgICAgdmFsdWU0OiBudWxsLFxuICAgICAgICAgICAgdmFsdWU1OiBudWxsLFxuICAgICAgICAgICAgdmFsdWU2OiBudWxsLFxuICAgICAgICAgICAgdmFsdWU3OiBudWxsLFxuICAgICAgICAgICAgdmFsdWU4OiBudWxsLFxuICAgICAgICAgICAgdmFsdWU5OiBudWxsLFxuICAgICAgICAgICAgdmFsdWUxMDogbnVsbCxcbiAgICAgICAgICAgIHZhbHVlMTE6IG51bGwsXG4gICAgICAgICAgICB2YWx1ZUljb25MZWZ0OiBudWxsLFxuICAgICAgICAgICAgdmFsdWVJY29uUmlnaHQ6IG51bGwsXG4gICAgICAgICAgICBzZWxlY3RlZENpdHk6IG51bGwsXG4gICAgICAgICAgICBub2RlczogbnVsbCxcbiAgICAgICAgICAgIHNlbGVjdGVkTm9kZTogbnVsbCxcbiAgICAgICAgICAgIGNhc2NhZGVDb3VudHJpZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdBdXN0cmFsaWEnLFxuICAgICAgICAgICAgICAgICAgICBjb2RlOiAnQVUnLFxuICAgICAgICAgICAgICAgICAgICBzdGF0ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnTmV3IFNvdXRoIFdhbGVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaXRpZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnU3lkbmV5JywgY29kZTogJ0EtU1knfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnTmV3Y2FzdGxlJywgY29kZTogJ0EtTkUnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnV29sbG9uZ29uZycsIGNvZGU6ICdBLVdPJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdRdWVlbnNsYW5kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaXRpZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnQnJpc2JhbmUnLCBjb2RlOiAnQS1CUid9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdUb3duc3ZpbGxlJywgY29kZTogJ0EtVE8nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnQ2FuYWRhJywgXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6ICdDQScsXG4gICAgICAgICAgICAgICAgICAgIHN0YXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdRdWViZWMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdNb250cmVhbCcsIGNvZGU6ICdDLU1PJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1F1ZWJlYyBDaXR5JywgY29kZTogJ0MtUVUnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ09udGFyaW8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdPdHRhd2EnLCBjb2RlOiAnQy1PVCd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdUb3JvbnRvJywgY29kZTogJ0MtVE8nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnVW5pdGVkIFN0YXRlcycsXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6ICdVUycsXG4gICAgICAgICAgICAgICAgICAgIHN0YXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdDYWxpZm9ybmlhJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaXRpZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnTG9zIEFuZ2VsZXMnLCBjb2RlOiAnVVMtTEEnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnU2FuIERpZWdvJywgY29kZTogJ1VTLVNEJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1NhbiBGcmFuY2lzY28nLCBjb2RlOiAnVVMtU0YnfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0Zsb3JpZGEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdKYWNrc29udmlsbGUnLCBjb2RlOiAnVVMtSkEnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnTWlhbWknLCBjb2RlOiAnVVMtTUknfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnVGFtcGEnLCBjb2RlOiAnVVMtVEEnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnT3JsYW5kbycsIGNvZGU6ICdVUy1PUid9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnVGV4YXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdBdXN0aW4nLCBjb2RlOiAnVVMtQVUnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnRGFsbGFzJywgY29kZTogJ1VTLURBJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ0hvdXN0b24nLCBjb2RlOiAnVVMtSE8nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgY291bnRyeVNlcnZpY2U6IG51bGwsXG4gICAgbm9kZVNlcnZpY2U6IG51bGwsXG4gICAgY3JlYXRlZCgpIHtcbiAgICAgICAgdGhpcy5jb3VudHJ5U2VydmljZSA9IG5ldyBDb3VudHJ5U2VydmljZSgpO1xuICAgICAgICB0aGlzLm5vZGVTZXJ2aWNlID0gbmV3IE5vZGVTZXJ2aWNlKCk7XG4gICAgfSxcbiAgICBtb3VudGVkKCkge1xuICAgICAgICB0aGlzLmNvdW50cnlTZXJ2aWNlLmdldENvdW50cmllcygpLnRoZW4oZGF0YSA9PiB0aGlzLmNvdW50cmllcyA9IGRhdGEpO1xuICAgICAgICB0aGlzLm5vZGVTZXJ2aWNlLmdldFRyZWVOb2RlcygpLnRoZW4oZGF0YSA9PiB0aGlzLm5vZGVzID0gZGF0YSk7XG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAgIHNlYXJjaENvdW50cnkoZXZlbnQpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghZXZlbnQucXVlcnkudHJpbSgpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbHRlcmVkQ291bnRyaWVzID0gWy4uLnRoaXMuY291bnRyaWVzXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyZWRDb3VudHJpZXMgPSB0aGlzLmNvdW50cmllcy5maWx0ZXIoKGNvdW50cnkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3VudHJ5Lm5hbWUudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKGV2ZW50LnF1ZXJ5LnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAyNTApO1xuICAgICAgICB9XG4gICAgfVxufVxuPFxcL3NjcmlwdD5cbiIKICAgICAgICB9LAogICAgICAgICdjb21wb3NpdGlvbi1hcGknOiB7CiAgICAgICAgICB0YWJOYW1lOiAnQ29tcG9zaXRpb24gQVBJIFNvdXJjZScsCiAgICAgICAgICBjb250ZW50OiAiXG48dGVtcGxhdGU+XG4gICAgPGRpdj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNhcmRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZsdWlkIHAtZ3JpZFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFRleHQgaWQ9XCJpbnB1dHRleHRcIiB0eXBlPVwidGV4dFwiIHYtbW9kZWw9XCJ2YWx1ZTFcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0dGV4dFwiPklucHV0VGV4dDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsIHAtaW5wdXQtaWNvbi1sZWZ0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInBpIHBpLXNlYXJjaFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRUZXh0IGlkPVwiaW5wdXR0ZXh0LWxlZnRcIiB0eXBlPVwidGV4dFwiIHYtbW9kZWw9XCJ2YWx1ZUljb25MZWZ0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dHRleHQtbGVmdFwiPkxlZnQgSWNvbjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWwgcC1pbnB1dC1pY29uLXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInBpIHBpLXNlYXJjaFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXRUZXh0IGlkPVwiaW5wdXR0ZXh0LXJpZ2h0XCIgdHlwZT1cInRleHRcIiB2LW1vZGVsPVwidmFsdWVJY29uUmlnaHRcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0dGV4dC1yaWdodFwiPlJpZ2h0IEljb248L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPEF1dG9Db21wbGV0ZSB2LW1vZGVsPVwidmFsdWUyXCIgOnN1Z2dlc3Rpb25zPVwiZmlsdGVyZWRDb3VudHJpZXNcIiBAY29tcGxldGU9XCJzZWFyY2hDb3VudHJ5KCRldmVudClcIiBmaWVsZD1cIm5hbWVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImF1dG9jb21wbGV0ZVwiPkF1dG9Db21wbGV0ZTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Q2FsZW5kYXIgaWQ9XCJjYWxlbmRhclwiIHYtbW9kZWw9XCJ2YWx1ZTNcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImNhbGVuZGFyXCI+Q2FsZW5kYXI8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPENoaXBzIGlkPVwiY2hpcHNcIiB2LW1vZGVsPVwidmFsdWU0XCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJjaGlwc1wiPkNoaXBzPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dE1hc2sgaWQ9XCJpbnB1dG1hc2tcIiB2LW1vZGVsPVwidmFsdWU1XCIgbWFzaz1cIjk5Lzk5Lzk5OTlcIiBzbG90Q2hhcj1cIm1tL2RkL3l5eXlcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0bWFza1wiPklucHV0TWFzazwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8SW5wdXROdW1iZXIgaWQ9XCJpbnB1dG51bWJlclwiIHYtbW9kZWw9XCJ2YWx1ZTZcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0bnVtYmVyXCI+SW5wdXROdW1iZXI8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWlucHV0Z3JvdXBcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1pbnB1dGdyb3VwLWFkZG9uXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJwaSBwaS11c2VyXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0VGV4dCBpZD1cImlucHV0Z3JvdXBcIiB0eXBlPVwidGV4dFwiIHYtbW9kZWw9XCJ2YWx1ZTdcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dGdyb3VwXCI+SW5wdXRHcm91cDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8Q2FzY2FkZVNlbGVjdCBpZD1cImNhc2NhZGVTZWxlY3RcIiB2LW1vZGVsPVwic2VsZWN0ZWRDaXR5XCIgOm9wdGlvbnM9XCJjYXNjYWRlQ291bnRyaWVzXCIgb3B0aW9uTGFiZWw9XCJjbmFtZVwiIG9wdGlvbkdyb3VwTGFiZWw9XCJuYW1lXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6b3B0aW9uR3JvdXBDaGlsZHJlbj1cIlsnc3RhdGVzJywgJ2NpdGllcyddXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJtdWx0aXNlbGVjdFwiPkNhc2NhZGVTZWxlY3Q8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPERyb3Bkb3duIGlkPVwiZHJvcGRvd25cIiB2LW1vZGVsPVwidmFsdWU4XCIgOm9wdGlvbnM9XCJjaXRpZXNcIiBvcHRpb25MYWJlbD1cIm5hbWVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImRyb3Bkb3duXCI+RHJvcGRvd248L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPE11bHRpU2VsZWN0IGlkPVwibXVsdGlzZWxlY3RcIiB2LW1vZGVsPVwidmFsdWU5XCIgOm9wdGlvbnM9XCJjaXRpZXNcIiBvcHRpb25MYWJlbD1cIm5hbWVcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cIm11bHRpc2VsZWN0XCI+TXVsdGlTZWxlY3Q8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFRyZWVTZWxlY3Qgdi1tb2RlbD1cInNlbGVjdGVkTm9kZVwiIDpvcHRpb25zPVwibm9kZXNcIj48L1RyZWVTZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwidHJlZXNlbGVjdFwiPlRyZWVTZWxlY3Q8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPFBhc3N3b3JkIGlkPVwicGFzc3dvcmRcIiB2LW1vZGVsPVwidmFsdWUxMVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwicGFzc3dvcmRcIj5QYXNzd29yZDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dGFyZWEgaWQ9XCJ0ZXh0YXJlYVwiIHYtbW9kZWw9XCJ2YWx1ZTEwXCIgcm93cz1cIjNcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInRleHRhcmVhXCI+VGV4dGFyZWE8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICBcbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5pbXBvcnQgeyByZWYsIG9uTW91bnRlZCB9IGZyb20gJ3Z1ZSc7XG5pbXBvcnQgQ291bnRyeVNlcnZpY2UgZnJvbSAnLi9zZXJ2aWNlL0NvdW50cnlTZXJ2aWNlJztcbmltcG9ydCBOb2RlU2VydmljZSBmcm9tICcuL3NlcnZpY2UvTm9kZVNlcnZpY2UnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gICAgc2V0dXAoKSB7XG4gICAgICAgIG9uTW91bnRlZCgoKSA9PiB7XG4gICAgICAgICAgICBjb3VudHJ5U2VydmljZS52YWx1ZS5nZXRDb3VudHJpZXMoKS50aGVuKGRhdGEgPT4gY291bnRyaWVzLnZhbHVlID0gZGF0YSk7XG4gICAgICAgICAgICBub2RlU2VydmljZS52YWx1ZS5nZXRUcmVlTm9kZXMoKS50aGVuKGRhdGEgPT4gbm9kZXMudmFsdWUgPSBkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgY29uc3QgY291bnRyeVNlcnZpY2UgPSByZWYobmV3IENvdW50cnlTZXJ2aWNlKCkpO1xuICAgICAgICBjb25zdCBub2RlU2VydmljZSA9IHJlZihuZXcgTm9kZVNlcnZpY2UoKSk7XG4gICAgICAgIGNvbnN0IGNvdW50cmllcyA9IHJlZigpO1xuICAgICAgICBjb25zdCBmaWx0ZXJlZENvdW50cmllcyA9IHJlZigpO1xuICAgICAgICBjb25zdCBjaXRpZXMgPSByZWYoW1xuICAgICAgICAgICAge25hbWU6ICdOZXcgWW9yaycsIGNvZGU6ICdOWSd9LFxuICAgICAgICAgICAge25hbWU6ICdSb21lJywgY29kZTogJ1JNJ30sXG4gICAgICAgICAgICB7bmFtZTogJ0xvbmRvbicsIGNvZGU6ICdMRE4nfSxcbiAgICAgICAgICAgIHtuYW1lOiAnSXN0YW5idWwnLCBjb2RlOiAnSVNUJ30sXG4gICAgICAgICAgICB7bmFtZTogJ1BhcmlzJywgY29kZTogJ1BSUyd9XG4gICAgICAgIF0pO1xuICAgICAgICBjb25zdCB2YWx1ZTEgPSByZWYoKTtcbiAgICAgICAgY29uc3QgdmFsdWUyID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IHZhbHVlMyA9IHJlZigpO1xuICAgICAgICBjb25zdCB2YWx1ZTQgPSByZWYoKTtcbiAgICAgICAgY29uc3QgdmFsdWU1ID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IHZhbHVlNiA9IHJlZigpO1xuICAgICAgICBjb25zdCB2YWx1ZTcgPSByZWYoKTtcbiAgICAgICAgY29uc3QgdmFsdWU4ID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IHZhbHVlOSA9IHJlZigpO1xuICAgICAgICBjb25zdCB2YWx1ZTEwID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IHZhbHVlMTEgPSByZWYoKTtcbiAgICAgICAgY29uc3QgdmFsdWVJY29uTGVmdCA9IHJlZigpO1xuICAgICAgICBjb25zdCB2YWx1ZUljb25SaWdodCA9IHJlZigpO1xuICAgICAgICBjb25zdCBzZWxlY3RlZENpdHkgPSByZWYoKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWROb2RlID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IG5vZGVzID0gcmVmKCk7XG4gICAgICAgIGNvbnN0IGNhc2NhZGVDb3VudHJpZXMgPSByZWYoW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdBdXN0cmFsaWEnLFxuICAgICAgICAgICAgICAgIGNvZGU6ICdBVScsXG4gICAgICAgICAgICAgICAgc3RhdGVzOiBbXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdOZXcgU291dGggV2FsZXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnU3lkbmV5JywgY29kZTogJ0EtU1knfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdOZXdjYXN0bGUnLCBjb2RlOiAnQS1ORSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1dvbGxvbmdvbmcnLCBjb2RlOiAnQS1XTyd9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdRdWVlbnNsYW5kJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ0JyaXNiYW5lJywgY29kZTogJ0EtQlInfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdUb3duc3ZpbGxlJywgY29kZTogJ0EtVE8nfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdDYW5hZGEnLCBcbiAgICAgICAgICAgICAgICBjb2RlOiAnQ0EnLFxuICAgICAgICAgICAgICAgIHN0YXRlczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnUXVlYmVjJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ01vbnRyZWFsJywgY29kZTogJ0MtTU8nfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdRdWViZWMgQ2l0eScsIGNvZGU6ICdDLVFVJ31cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ09udGFyaW8nLFxuICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnT3R0YXdhJywgY29kZTogJ0MtT1QnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdUb3JvbnRvJywgY29kZTogJ0MtVE8nfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG5hbWU6ICdVbml0ZWQgU3RhdGVzJyxcbiAgICAgICAgICAgICAgICBjb2RlOiAnVVMnLFxuICAgICAgICAgICAgICAgIHN0YXRlczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnQ2FsaWZvcm5pYScsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaXRpZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdMb3MgQW5nZWxlcycsIGNvZGU6ICdVUy1MQSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1NhbiBEaWVnbycsIGNvZGU6ICdVUy1TRCd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1NhbiBGcmFuY2lzY28nLCBjb2RlOiAnVVMtU0YnfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnRmxvcmlkYScsXG4gICAgICAgICAgICAgICAgICAgICAgICBjaXRpZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdKYWNrc29udmlsbGUnLCBjb2RlOiAnVVMtSkEnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdNaWFtaScsIGNvZGU6ICdVUy1NSSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1RhbXBhJywgY29kZTogJ1VTLVRBJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnT3JsYW5kbycsIGNvZGU6ICdVUy1PUid9XG4gICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdUZXhhcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ0F1c3RpbicsIGNvZGU6ICdVUy1BVSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdEYWxsYXMnLCBjb2RlOiAnVVMtREEnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnSG91c3RvbicsIGNvZGU6ICdVUy1ITyd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSk7XG5cbiAgICAgICAgY29uc3Qgc2VhcmNoQ291bnRyeSA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFldmVudC5xdWVyeS50cmltKCkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQ291bnRyaWVzLnZhbHVlID0gWy4uLmNvdW50cmllcy52YWx1ZV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmaWx0ZXJlZENvdW50cmllcy52YWx1ZSA9IGNvdW50cmllcy52YWx1ZS5maWx0ZXIoKGNvdW50cnkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb3VudHJ5Lm5hbWUudG9Mb3dlckNhc2UoKS5zdGFydHNXaXRoKGV2ZW50LnF1ZXJ5LnRvTG93ZXJDYXNlKCkpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCAyNTApO1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiB7IGNvdW50cnlTZXJ2aWNlLCBjb3VudHJpZXMsIGZpbHRlcmVkQ291bnRyaWVzLCBjaXRpZXMsIHZhbHVlMSwgdmFsdWUyLCB2YWx1ZTMsIHZhbHVlNCwgdmFsdWU1LCB2YWx1ZTYsIFxuICAgICAgICAgICAgdmFsdWU3LCB2YWx1ZTgsIHZhbHVlOSwgdmFsdWUxMCwgdmFsdWUxMSwgdmFsdWVJY29uTGVmdCwgdmFsdWVJY29uUmlnaHQsIHNlbGVjdGVkQ2l0eSwgY2FzY2FkZUNvdW50cmllcywgc2VhcmNoQ291bnRyeSxcbiAgICAgICAgICAgIG5vZGVzLCBzZWxlY3RlZE5vZGUgfVxuICAgIH1cbn1cbjxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfSwKICAgICAgICAnYnJvd3Nlci1zb3VyY2UnOiB7CiAgICAgICAgICB0YWJOYW1lOiAnQnJvd3NlciBTb3VyY2UnLAogICAgICAgICAgaW1wb3J0czogIjxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS5taW4uanNcIj48XFwvc2NyaXB0PlxuICAgICAgICA8c2NyaXB0IHNyYz1cImh0dHBzOi8vdW5wa2cuY29tL3ByaW1ldnVlQF4zL2NhbGVuZGFyL2NhbGVuZGFyLm1pbi5qc1wiPjxcXC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvY2hpcHMvY2hpcHMubWluLmpzXCI+PFxcL3NjcmlwdD5cbiAgICAgICAgPHNjcmlwdCBzcmM9XCJodHRwczovL3VucGtnLmNvbS9wcmltZXZ1ZUBeMy9pbnB1dG1hc2svaW5wdXRtYXNrLm1pbi5qc1wiPjxcXC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvY2FzY2FkZXNlbGVjdC9jYXNjYWRlc2VsZWN0Lm1pbi5qc1wiPjxcXC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiaHR0cHM6Ly91bnBrZy5jb20vcHJpbWV2dWVAXjMvbXVsdGlzZWxlY3QvbXVsdGlzZWxlY3QubWluLmpzXCI+PFxcL3NjcmlwdD5cbiAgICAgICAgPHNjcmlwdCBzcmM9XCJodHRwczovL3VucGtnLmNvbS9wcmltZXZ1ZUBeMy90cmVlc2VsZWN0L3RyZWVzZWxlY3QubWluLmpzXCI+PFxcL3NjcmlwdD5cbiAgICAgICAgPHNjcmlwdCBzcmM9XCJodHRwczovL3VucGtnLmNvbS9wcmltZXZ1ZUBeMy9wYXNzd29yZC9wYXNzd29yZC5taW4uanNcIj48XFwvc2NyaXB0PlxuICAgICAgICA8c2NyaXB0IHNyYz1cImh0dHBzOi8vdW5wa2cuY29tL3ByaW1ldnVlQF4zL3RleHRhcmVhL3RleHRhcmVhLm1pbi5qc1wiPjxcXC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiLi9Db3VudHJ5U2VydmljZS5qc1wiPjxcXC9zY3JpcHQ+XG4gICAgICAgIDxzY3JpcHQgc3JjPVwiLi9Ob2RlU2VydmljZS5qc1wiPjxcXC9zY3JpcHQ+IiwKICAgICAgICAgIGNvbnRlbnQ6ICI8ZGl2IGlkPVwiYXBwXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZsdWlkIHAtZ3JpZFwiPlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwLWlucHV0dGV4dCBpZD1cImlucHV0dGV4dFwiIHR5cGU9XCJ0ZXh0XCIgdi1tb2RlbD1cInZhbHVlMVwiPjwvcC1pbnB1dHRleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0dGV4dFwiPklucHV0VGV4dDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbCBwLWlucHV0LWljb24tbGVmdFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwicGkgcGktc2VhcmNoXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwLWlucHV0dGV4dCBpZD1cImlucHV0dGV4dC1sZWZ0XCIgdHlwZT1cInRleHRcIiB2LW1vZGVsPVwidmFsdWVJY29uTGVmdFwiPjwvcC1pbnB1dHRleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0dGV4dC1sZWZ0XCI+TGVmdCBJY29uPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWwgcC1pbnB1dC1pY29uLXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJwaSBwaS1zZWFyY2hcIj48L2k+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtaW5wdXR0ZXh0IGlkPVwiaW5wdXR0ZXh0LXJpZ2h0XCIgdHlwZT1cInRleHRcIiB2LW1vZGVsPVwidmFsdWVJY29uUmlnaHRcIj48L3AtaW5wdXR0ZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dHRleHQtcmlnaHRcIj5SaWdodCBJY29uPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtYXV0b2NvbXBsZXRlIHYtbW9kZWw9XCJ2YWx1ZTJcIiA6c3VnZ2VzdGlvbnM9XCJmaWx0ZXJlZENvdW50cmllc1wiIEBjb21wbGV0ZT1cInNlYXJjaENvdW50cnkoJGV2ZW50KVwiIGZpZWxkPVwibmFtZVwiPjwvcC1hdXRvY29tcGxldGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImF1dG9jb21wbGV0ZVwiPkF1dG9Db21wbGV0ZTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwLWNhbGVuZGFyIGlkPVwiY2FsZW5kYXJcIiB2LW1vZGVsPVwidmFsdWUzXCI+PC9wLWNhbGVuZGFyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJjYWxlbmRhclwiPkNhbGVuZGFyPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtY2hpcHMgaWQ9XCJjaGlwc1wiIHYtbW9kZWw9XCJ2YWx1ZTRcIj48L3AtY2hpcHM+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImNoaXBzXCI+Q2hpcHM8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cC1pbnB1dG1hc2sgaWQ9XCJpbnB1dG1hc2tcIiB2LW1vZGVsPVwidmFsdWU1XCIgbWFzaz1cIjk5Lzk5Lzk5OTlcIiBzbG90LWNoYXI9XCJtbS9kZC95eXl5XCI+PC9wLWlucHV0bWFzaz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiaW5wdXRtYXNrXCI+SW5wdXRNYXNrPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtaW5wdXRudW1iZXIgaWQ9XCJpbnB1dG51bWJlclwiIHYtbW9kZWw9XCJ2YWx1ZTZcIj48L3AtaW5wdXRudW1iZXI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImlucHV0bnVtYmVyXCI+SW5wdXROdW1iZXI8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1pbnB1dGdyb3VwXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWlucHV0Z3JvdXAtYWRkb25cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJwaSBwaS11c2VyXCI+PC9pPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtaW5wdXR0ZXh0IGlkPVwiaW5wdXRncm91cFwiIHR5cGU9XCJ0ZXh0XCIgdi1tb2RlbD1cInZhbHVlN1wiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJpbnB1dGdyb3VwXCI+SW5wdXRHcm91cDwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwLWNhc2NhZGVzZWxlY3QgaWQ9XCJjYXNjYWRlU2VsZWN0XCIgdi1tb2RlbD1cInNlbGVjdGVkQ2l0eVwiIDpvcHRpb25zPVwiY2FzY2FkZUNvdW50cmllc1wiIG9wdGlvbi1sYWJlbD1cImNuYW1lXCIgb3B0aW9uLWdyb3VwLWxhYmVsPVwibmFtZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpvcHRpb24tZ3JvdXAtY2hpbGRyZW49XCJbJ3N0YXRlcycsICdjaXRpZXMnXVwiPjwvcC1jYXNjYWRlc2VsZWN0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJtdWx0aXNlbGVjdFwiPkNhc2NhZGVTZWxlY3Q8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cC1kcm9wZG93biBpZD1cImRyb3Bkb3duXCIgdi1tb2RlbD1cInZhbHVlOFwiIDpvcHRpb25zPVwiY2l0aWVzXCIgb3B0aW9uLWxhYmVsPVwibmFtZVwiPjwvcC1kcm9wZG93bj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiZHJvcGRvd25cIj5Ecm9wZG93bjwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwicC1maWVsZCBwLWNvbC0xMiBwLW1kLTRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwicC1mbG9hdC1sYWJlbFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwLW11bHRpc2VsZWN0IGlkPVwibXVsdGlzZWxlY3RcIiB2LW1vZGVsPVwidmFsdWU5XCIgOm9wdGlvbnM9XCJjaXRpZXNcIiBvcHRpb24tbGFiZWw9XCJuYW1lXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cIm11bHRpc2VsZWN0XCI+TXVsdGlTZWxlY3Q8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInAtZmllbGQgcC1jb2wtMTIgcC1tZC00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz1cInAtZmxvYXQtbGFiZWxcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cC10cmVlc2VsZWN0IHYtbW9kZWw9XCJzZWxlY3RlZE5vZGVcIiA6b3B0aW9ucz1cIm5vZGVzXCI+PC9wLXRyZWVzZWxlY3Q+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInRyZWVzZWxlY3RcIj5UcmVlU2VsZWN0PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtcGFzc3dvcmQgaWQ9XCJwYXNzd29yZFwiIHYtbW9kZWw9XCJ2YWx1ZTExXCI+PC9wLXBhc3N3b3JkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJwYXNzd29yZFwiPlBhc3N3b3JkPC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwLWZpZWxkIHAtY29sLTEyIHAtbWQtNFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJwLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAtdGV4dGFyZWEgaWQ9XCJ0ZXh0YXJlYVwiIHYtbW9kZWw9XCJ2YWx1ZTEwXCIgcm93cz1cIjNcIj48L3AtdGV4dGFyZWE+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInRleHRhcmVhXCI+VGV4dGFyZWE8L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8c2NyaXB0IHR5cGU9XCJtb2R1bGVcIj5cbiAgICAgICAgY29uc3QgeyBjcmVhdGVBcHAsIHJlZiwgb25Nb3VudGVkIH0gPSBWdWU7XG5cbiAgICAgICAgY29uc3QgQXBwID0ge1xuICAgICAgICAgICAgc2V0dXAoKSB7XG4gICAgICAgICAgICAgICAgb25Nb3VudGVkKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY291bnRyeVNlcnZpY2UudmFsdWUuZ2V0Q291bnRyaWVzKCkudGhlbihkYXRhID0+IGNvdW50cmllcy52YWx1ZSA9IGRhdGEpO1xuICAgICAgICAgICAgICAgICAgICBub2RlU2VydmljZS52YWx1ZS5nZXRUcmVlTm9kZXMoKS50aGVuKGRhdGEgPT4gbm9kZXMudmFsdWUgPSBkYXRhKTtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIGNvbnN0IGNvdW50cnlTZXJ2aWNlID0gcmVmKG5ldyBDb3VudHJ5U2VydmljZSgpKTtcbiAgICAgICAgICAgICAgICBjb25zdCBub2RlU2VydmljZSA9IHJlZihuZXcgTm9kZVNlcnZpY2UoKSk7XG4gICAgICAgICAgICAgICAgY29uc3QgY291bnRyaWVzID0gcmVmKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyZWRDb3VudHJpZXMgPSByZWYoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBjaXRpZXMgPSByZWYoW1xuICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ05ldyBZb3JrJywgY29kZTogJ05ZJ30sXG4gICAgICAgICAgICAgICAgICAgIHtuYW1lOiAnUm9tZScsIGNvZGU6ICdSTSd9LFxuICAgICAgICAgICAgICAgICAgICB7bmFtZTogJ0xvbmRvbicsIGNvZGU6ICdMRE4nfSxcbiAgICAgICAgICAgICAgICAgICAge25hbWU6ICdJc3RhbmJ1bCcsIGNvZGU6ICdJU1QnfSxcbiAgICAgICAgICAgICAgICAgICAge25hbWU6ICdQYXJpcycsIGNvZGU6ICdQUlMnfVxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlMSA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlMiA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlMyA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlNCA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlNSA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlNiA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlNyA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlOCA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlOSA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlMTAgPSByZWYoKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZTExID0gcmVmKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWVJY29uTGVmdCA9IHJlZigpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlSWNvblJpZ2h0ID0gcmVmKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWRDaXR5ID0gcmVmKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0ZWROb2RlID0gcmVmKCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgbm9kZXMgPSByZWYoKTtcbiAgICAgICAgICAgIGNvbnN0IGNhc2NhZGVDb3VudHJpZXMgPSByZWYoW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0F1c3RyYWxpYScsXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6ICdBVScsXG4gICAgICAgICAgICAgICAgICAgIHN0YXRlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdOZXcgU291dGggV2FsZXMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdTeWRuZXknLCBjb2RlOiAnQS1TWSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdOZXdjYXN0bGUnLCBjb2RlOiAnQS1ORSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdXb2xsb25nb25nJywgY29kZTogJ0EtV08nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1F1ZWVuc2xhbmQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdCcmlzYmFuZScsIGNvZGU6ICdBLUJSJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1Rvd25zdmlsbGUnLCBjb2RlOiAnQS1UTyd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdDYW5hZGEnLCBcbiAgICAgICAgICAgICAgICAgICAgY29kZTogJ0NBJyxcbiAgICAgICAgICAgICAgICAgICAgc3RhdGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ1F1ZWJlYycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ01vbnRyZWFsJywgY29kZTogJ0MtTU8nfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnUXVlYmVjIENpdHknLCBjb2RlOiAnQy1RVSd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnT250YXJpbycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ090dGF3YScsIGNvZGU6ICdDLU9UJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ1Rvcm9udG8nLCBjb2RlOiAnQy1UTyd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdVbml0ZWQgU3RhdGVzJyxcbiAgICAgICAgICAgICAgICAgICAgY29kZTogJ1VTJyxcbiAgICAgICAgICAgICAgICAgICAgc3RhdGVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogJ0NhbGlmb3JuaWEnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdMb3MgQW5nZWxlcycsIGNvZGU6ICdVUy1MQSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdTYW4gRGllZ28nLCBjb2RlOiAnVVMtU0QnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnU2FuIEZyYW5jaXNjbycsIGNvZGU6ICdVUy1TRid9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAnRmxvcmlkYScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0aWVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ0phY2tzb252aWxsZScsIGNvZGU6ICdVUy1KQSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdNaWFtaScsIGNvZGU6ICdVUy1NSSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdUYW1wYScsIGNvZGU6ICdVUy1UQSd9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdPcmxhbmRvJywgY29kZTogJ1VTLU9SJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdUZXhhcycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdGllczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2NuYW1lOiAnQXVzdGluJywgY29kZTogJ1VTLUFVJ30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y25hbWU6ICdEYWxsYXMnLCBjb2RlOiAnVVMtREEnfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjbmFtZTogJ0hvdXN0b24nLCBjb2RlOiAnVVMtSE8nfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBzZWFyY2hDb3VudHJ5ID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFldmVudC5xdWVyeS50cmltKCkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyZWRDb3VudHJpZXMudmFsdWUgPSBbLi4uY291bnRyaWVzLnZhbHVlXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkQ291bnRyaWVzLnZhbHVlID0gY291bnRyaWVzLnZhbHVlLmZpbHRlcigoY291bnRyeSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY291bnRyeS5uYW1lLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChldmVudC5xdWVyeS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSwgMjUwKTtcbiAgICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHsgY291bnRyeVNlcnZpY2UsIGNvdW50cmllcywgZmlsdGVyZWRDb3VudHJpZXMsIGNpdGllcywgdmFsdWUxLCB2YWx1ZTIsIHZhbHVlMywgdmFsdWU0LCB2YWx1ZTUsIHZhbHVlNiwgXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlNywgdmFsdWU4LCB2YWx1ZTksIHZhbHVlMTAsIHZhbHVlMTEsIHZhbHVlSWNvbkxlZnQsIHZhbHVlSWNvblJpZ2h0LCBzZWxlY3RlZENpdHksIGNhc2NhZGVDb3VudHJpZXMsIHNlYXJjaENvdW50cnksXG4gICAgICAgICAgICAgICAgICAgIG5vZGVzLCBzZWxlY3RlZE5vZGUgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBvbmVudHM6IHtcbiAgICAgICAgICAgICAgICBcInAtaW5wdXR0ZXh0XCI6IHByaW1ldnVlLmlucHV0dGV4dCxcbiAgICAgICAgICAgICAgICBcInAtaW5wdXRudW1iZXJcIjogcHJpbWV2dWUuaW5wdXRudW1iZXIsXG4gICAgICAgICAgICAgICAgXCJwLWF1dG9jb21wbGV0ZVwiOiBwcmltZXZ1ZS5hdXRvY29tcGxldGUsXG4gICAgICAgICAgICAgICAgXCJwLWNhbGVuZGFyXCI6IHByaW1ldnVlLmNhbGVuZGFyLFxuICAgICAgICAgICAgICAgIFwicC1jaGlwc1wiOiBwcmltZXZ1ZS5jaGlwcyxcbiAgICAgICAgICAgICAgICBcInAtaW5wdXRtYXNrXCI6IHByaW1ldnVlLmlucHV0bWFzayxcbiAgICAgICAgICAgICAgICBcInAtY2FzY2FkZXNlbGVjdFwiOiBwcmltZXZ1ZS5jYXNjYWRlc2VsZWN0LFxuICAgICAgICAgICAgICAgIFwicC1kcm9wZG93blwiOiBwcmltZXZ1ZS5kcm9wZG93bixcbiAgICAgICAgICAgICAgICBcInAtbXVsdGlzZWxlY3RcIjogcHJpbWV2dWUubXVsdGlzZWxlY3QsXG4gICAgICAgICAgICAgICAgXCJwLXRyZWVzZWxlY3RcIjogcHJpbWV2dWUudHJlZXNlbGVjdCxcbiAgICAgICAgICAgICAgICBcInAtcGFzc3dvcmRcIjogcHJpbWV2dWUucGFzc3dvcmQsXG4gICAgICAgICAgICAgICAgXCJwLXRleHRhcmVhXCI6IHByaW1ldnVlLnRleHRhcmVhXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIFxuICAgICAgICBjcmVhdGVBcHAoQXBwKVxuICAgICAgICAgICAgLnVzZShwcmltZXZ1ZS5jb25maWcuZGVmYXVsdClcbiAgICAgICAgICAgIC5tb3VudChcIiNhcHBcIik7XG4gICAgICAgIDxcXC9zY3JpcHQ+XG4iCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgY291bnRyeVNlcnZpY2U6IG51bGwsCiAgbm9kZVNlcnZpY2U6IG51bGwsCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuY291bnRyeVNlcnZpY2UgPSBuZXcgQ291bnRyeVNlcnZpY2UoKTsKICAgIHRoaXMubm9kZVNlcnZpY2UgPSBuZXcgTm9kZVNlcnZpY2UoKTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuY291bnRyeVNlcnZpY2UuZ2V0Q291bnRyaWVzKCkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICByZXR1cm4gX3RoaXMuY291bnRyaWVzID0gZGF0YTsKICAgIH0pOwogICAgdGhpcy5ub2RlU2VydmljZS5nZXRUcmVlTm9kZXMoKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIHJldHVybiBfdGhpcy5ub2RlcyA9IGRhdGE7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlYXJjaENvdW50cnk6IGZ1bmN0aW9uIHNlYXJjaENvdW50cnkoZXZlbnQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoIWV2ZW50LnF1ZXJ5LnRyaW0oKS5sZW5ndGgpIHsKICAgICAgICAgIF90aGlzMi5maWx0ZXJlZENvdW50cmllcyA9IF90b0NvbnN1bWFibGVBcnJheShfdGhpczIuY291bnRyaWVzKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMyLmZpbHRlcmVkQ291bnRyaWVzID0gX3RoaXMyLmNvdW50cmllcy5maWx0ZXIoZnVuY3Rpb24gKGNvdW50cnkpIHsKICAgICAgICAgICAgcmV0dXJuIGNvdW50cnkubmFtZS50b0xvd2VyQ2FzZSgpLnN0YXJ0c1dpdGgoZXZlbnQucXVlcnkudG9Mb3dlckNhc2UoKSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0sIDI1MCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/crocslut/Desktop/Git/primevue/src/views/floatlabel/FloatLabelDemo.vue"],"names":[],"mappings":";;;;;AAwHA,OAAO,cAAP,MAA2B,8BAA3B;AACA,OAAO,WAAP,MAAwB,2BAAxB;AAEA,eAAe;AACX,EAAA,IADW,kBACJ;AACH,WAAO;AACH,MAAA,SAAS,EAAE,IADR;AAEH,MAAA,iBAAiB,EAAE,IAFhB;AAGH,MAAA,MAAM,EAAE,CACJ;AAAC,QAAA,IAAI,EAAE,UAAP;AAAmB,QAAA,IAAI,EAAE;AAAzB,OADI,EAEJ;AAAC,QAAA,IAAI,EAAE,MAAP;AAAe,QAAA,IAAI,EAAE;AAArB,OAFI,EAGJ;AAAC,QAAA,IAAI,EAAE,QAAP;AAAiB,QAAA,IAAI,EAAE;AAAvB,OAHI,EAIJ;AAAC,QAAA,IAAI,EAAE,UAAP;AAAmB,QAAA,IAAI,EAAE;AAAzB,OAJI,EAKJ;AAAC,QAAA,IAAI,EAAE,OAAP;AAAgB,QAAA,IAAI,EAAE;AAAtB,OALI,CAHL;AAUH,MAAA,MAAM,EAAE,IAVL;AAWH,MAAA,MAAM,EAAE,IAXL;AAYH,MAAA,MAAM,EAAE,IAZL;AAaH,MAAA,MAAM,EAAE,IAbL;AAcH,MAAA,MAAM,EAAE,IAdL;AAeH,MAAA,MAAM,EAAE,IAfL;AAgBH,MAAA,MAAM,EAAE,IAhBL;AAiBH,MAAA,MAAM,EAAE,IAjBL;AAkBH,MAAA,MAAM,EAAE,IAlBL;AAmBH,MAAA,OAAO,EAAE,IAnBN;AAoBH,MAAA,OAAO,EAAE,IApBN;AAqBH,MAAA,aAAa,EAAE,IArBZ;AAsBH,MAAA,cAAc,EAAE,IAtBb;AAuBH,MAAA,YAAY,EAAE,IAvBX;AAwBH,MAAA,KAAK,EAAE,IAxBJ;AAyBH,MAAA,YAAY,EAAE,IAzBX;AA0BH,MAAA,gBAAgB,EAAE,CACd;AACI,QAAA,IAAI,EAAE,WADV;AAEI,QAAA,IAAI,EAAE,IAFV;AAGI,QAAA,MAAM,EAAE,CACJ;AACI,UAAA,IAAI,EAAE,iBADV;AAEI,UAAA,MAAM,EAAE,CACJ;AAAC,YAAA,KAAK,EAAE,QAAR;AAAkB,YAAA,IAAI,EAAE;AAAxB,WADI,EAEJ;AAAC,YAAA,KAAK,EAAE,WAAR;AAAqB,YAAA,IAAI,EAAE;AAA3B,WAFI,EAGJ;AAAC,YAAA,KAAK,EAAE,YAAR;AAAsB,YAAA,IAAI,EAAE;AAA5B,WAHI;AAFZ,SADI,EASJ;AACI,UAAA,IAAI,EAAE,YADV;AAEI,UAAA,MAAM,EAAE,CACJ;AAAC,YAAA,KAAK,EAAE,UAAR;AAAoB,YAAA,IAAI,EAAE;AAA1B,WADI,EAEJ;AAAC,YAAA,KAAK,EAAE,YAAR;AAAsB,YAAA,IAAI,EAAE;AAA5B,WAFI;AAFZ,SATI;AAHZ,OADc,EAuBd;AACI,QAAA,IAAI,EAAE,QADV;AAEI,QAAA,IAAI,EAAE,IAFV;AAGI,QAAA,MAAM,EAAE,CACJ;AACI,UAAA,IAAI,EAAE,QADV;AAEI,UAAA,MAAM,EAAE,CACJ;AAAC,YAAA,KAAK,EAAE,UAAR;AAAoB,YAAA,IAAI,EAAE;AAA1B,WADI,EAEJ;AAAC,YAAA,KAAK,EAAE,aAAR;AAAuB,YAAA,IAAI,EAAE;AAA7B,WAFI;AAFZ,SADI,EAQJ;AACI,UAAA,IAAI,EAAE,SADV;AAEI,UAAA,MAAM,EAAE,CACJ;AAAC,YAAA,KAAK,EAAE,QAAR;AAAkB,YAAA,IAAI,EAAE;AAAxB,WADI,EAEJ;AAAC,YAAA,KAAK,EAAE,SAAR;AAAmB,YAAA,IAAI,EAAE;AAAzB,WAFI;AAFZ,SARI;AAHZ,OAvBc,EA4Cd;AACI,QAAA,IAAI,EAAE,eADV;AAEI,QAAA,IAAI,EAAE,IAFV;AAGI,QAAA,MAAM,EAAE,CACJ;AACI,UAAA,IAAI,EAAE,YADV;AAEI,UAAA,MAAM,EAAE,CACJ;AAAC,YAAA,KAAK,EAAE,aAAR;AAAuB,YAAA,IAAI,EAAE;AAA7B,WADI,EAEJ;AAAC,YAAA,KAAK,EAAE,WAAR;AAAqB,YAAA,IAAI,EAAE;AAA3B,WAFI,EAGJ;AAAC,YAAA,KAAK,EAAE,eAAR;AAAyB,YAAA,IAAI,EAAE;AAA/B,WAHI;AAFZ,SADI,EASJ;AACI,UAAA,IAAI,EAAE,SADV;AAEI,UAAA,MAAM,EAAE,CACJ;AAAC,YAAA,KAAK,EAAE,cAAR;AAAwB,YAAA,IAAI,EAAE;AAA9B,WADI,EAEJ;AAAC,YAAA,KAAK,EAAE,OAAR;AAAiB,YAAA,IAAI,EAAE;AAAvB,WAFI,EAGJ;AAAC,YAAA,KAAK,EAAE,OAAR;AAAiB,YAAA,IAAI,EAAE;AAAvB,WAHI,EAIJ;AAAC,YAAA,KAAK,EAAE,SAAR;AAAmB,YAAA,IAAI,EAAE;AAAzB,WAJI;AAFZ,SATI,EAkBJ;AACI,UAAA,IAAI,EAAE,OADV;AAEI,UAAA,MAAM,EAAE,CACJ;AAAC,YAAA,KAAK,EAAE,QAAR;AAAkB,YAAA,IAAI,EAAE;AAAxB,WADI,EAEJ;AAAC,YAAA,KAAK,EAAE,QAAR;AAAkB,YAAA,IAAI,EAAE;AAAxB,WAFI,EAGJ;AAAC,YAAA,KAAK,EAAE,SAAR;AAAmB,YAAA,IAAI,EAAE;AAAzB,WAHI;AAFZ,SAlBI;AAHZ,OA5Cc,CA1Bf;AAsGH,MAAA,OAAO,EAAE;AACL,uBAAe;AACX,UAAA,OAAO,EAAE,oBADE;AAEX,UAAA,OAAO;AAFI,SADV;AAyPL,2BAAmB;AACf,UAAA,OAAO,EAAE,wBADM;AAEf,UAAA,OAAO;AAFQ,SAzPd;AA+eL,0BAAkB;AACd,UAAA,OAAO,EAAE,gBADK;AAEd,UAAA,OAAO,67BAFO;AAad,UAAA,OAAO;AAbO;AA/eb;AAtGN,KAAP;AAq2BH,GAv2BU;AAw2BX,EAAA,cAAc,EAAE,IAx2BL;AAy2BX,EAAA,WAAW,EAAE,IAz2BF;AA02BX,EAAA,OA12BW,qBA02BD;AACN,SAAK,cAAL,GAAsB,IAAI,cAAJ,EAAtB;AACA,SAAK,WAAL,GAAmB,IAAI,WAAJ,EAAnB;AACH,GA72BU;AA82BX,EAAA,OA92BW,qBA82BD;AAAA;;AACN,SAAK,cAAL,CAAoB,YAApB,GAAmC,IAAnC,CAAwC,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,SAAL,GAAiB,IAAtB;AAAA,KAA3C;AACA,SAAK,WAAL,CAAiB,YAAjB,GAAgC,IAAhC,CAAqC,UAAA,IAAG;AAAA,aAAK,KAAI,CAAC,KAAL,GAAa,IAAlB;AAAA,KAAxC;AACH,GAj3BU;AAk3BX,EAAA,OAAO,EAAE;AACL,IAAA,aADK,yBACS,KADT,EACgB;AAAA;;AACjB,MAAA,UAAU,CAAC,YAAM;AACb,YAAI,CAAC,KAAK,CAAC,KAAN,CAAY,IAAZ,GAAmB,MAAxB,EAAgC;AAC5B,UAAA,MAAI,CAAC,iBAAL,sBAA6B,MAAI,CAAC,SAAlC;AACJ,SAFA,MAGK;AACD,UAAA,MAAI,CAAC,iBAAL,GAAyB,MAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,UAAC,OAAD,EAAa;AACxD,mBAAO,OAAO,CAAC,IAAR,CAAa,WAAb,GAA2B,UAA3B,CAAsC,KAAK,CAAC,KAAN,CAAY,WAAZ,EAAtC,CAAP;AACH,WAFwB,CAAzB;AAGJ;AACH,OATS,EASP,GATO,CAAV;AAUJ;AAZK;AAl3BE,CAAf","sourcesContent":["<template>\n    <div>\n        <div class=\"content-section introduction\">\n            <div class=\"feature-intro\">\n                <h1>Float Label</h1>\n                <p>All input text components support floating labels.</p>\n            </div>\n            <AppDemoActions />\n        </div>\n\n        <div class=\"content-section implementation\">\n            <div class=\"card\">\n                <div class=\"p-fluid p-grid\">\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                            <label for=\"inputtext\">InputText</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label p-input-icon-left\">\n                            <i class=\"pi pi-search\" />\n                            <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                            <label for=\"inputtext-left\">Left Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                       <span class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-search\" />\n                            <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                            <label for=\"inputtext-right\">Right Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                            <label for=\"autocomplete\">AutoComplete</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Calendar id=\"calendar\" v-model=\"value3\" />\n                            <label for=\"calendar\">Calendar</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Chips id=\"chips\" v-model=\"value4\" />\n                            <label for=\"chips\">Chips</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                            <label for=\"inputmask\">InputMask</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                            <label for=\"inputnumber\">InputNumber</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <div class=\"p-inputgroup\">\n                            <span class=\"p-inputgroup-addon\">\n                                <i class=\"pi pi-user\"></i>\n                            </span>\n                            <span class=\"p-float-label\">\n                                <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                                <label for=\"inputgroup\">InputGroup</label>\n                            </span>\n                        </div>\n                    </div>\n                     <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                                :optionGroupChildren=\"['states', 'cities']\" />\n                            <label for=\"multiselect\">CascadeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                            <label for=\"dropdown\">Dropdown</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                            <label for=\"multiselect\">MultiSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                            <label for=\"treeselect\">TreeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Password id=\"password\" v-model=\"value11\" />\n                            <label for=\"password\">Password</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                            <label for=\"textarea\">Textarea</label>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <AppDoc name=\"FloatLabelDemo\" :sources=\"sources\" :service=\"['CountryService', 'NodeService']\" :data=\"['countries', 'treenodes']\" github=\"floatlabel/FloatLabelDemo.vue\" />\n    </div>\n</template>\n\n<script>\nimport CountryService from '../../service/CountryService';\nimport NodeService from '../../service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            value11: null,\n            valueIconLeft: null,\n            valueIconRight: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ],\n            sources: {\n                'options-api': {\n                    tabName: 'Options API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"p-fluid p-grid\">\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                        <label for=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-left\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                        <label for=\"inputtext-left\">Left Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                   <span class=\"p-float-label p-input-icon-right\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                        <label for=\"inputtext-right\">Right Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                        <label for=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Calendar id=\"calendar\" v-model=\"value3\" />\n                        <label for=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Chips id=\"chips\" v-model=\"value4\" />\n                        <label for=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                        <label for=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                        <label for=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <div class=\"p-inputgroup\">\n                        <span class=\"p-inputgroup-addon\">\n                            <i class=\"pi pi-user\"></i>\n                        </span>\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                            <label for=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                 <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                            :optionGroupChildren=\"['states', 'cities']\" />\n                        <label for=\"multiselect\">CascadeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                        <label for=\"treeselect\">TreeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Password id=\"password\" v-model=\"value11\" />\n                        <label for=\"password\">Password</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                        <label for=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    data() {\n        return {\n            countries: null,\n            filteredCountries: null,\n            cities: [\n                {name: 'New York', code: 'NY'},\n                {name: 'Rome', code: 'RM'},\n                {name: 'London', code: 'LDN'},\n                {name: 'Istanbul', code: 'IST'},\n                {name: 'Paris', code: 'PRS'}\n            ],\n            value1: null,\n            value2: null,\n            value3: null,\n            value4: null,\n            value5: null,\n            value6: null,\n            value7: null,\n            value8: null,\n            value9: null,\n            value10: null,\n            value11: null,\n            valueIconLeft: null,\n            valueIconRight: null,\n            selectedCity: null,\n            nodes: null,\n            selectedNode: null,\n            cascadeCountries: [\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n<\\\\/script>\n`\n                },\n                'composition-api': {\n                    tabName: 'Composition API Source',\n                    content: `\n<template>\n    <div>\n        <div class=\"card\">\n            <div class=\"p-fluid p-grid\">\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputText id=\"inputtext\" type=\"text\" v-model=\"value1\" />\n                        <label for=\"inputtext\">InputText</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-left\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\" />\n                        <label for=\"inputtext-left\">Left Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                   <span class=\"p-float-label p-input-icon-right\">\n                        <i class=\"pi pi-search\" />\n                        <InputText id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\" />\n                        <label for=\"inputtext-right\">Right Icon</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <AutoComplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\" />\n                        <label for=\"autocomplete\">AutoComplete</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Calendar id=\"calendar\" v-model=\"value3\" />\n                        <label for=\"calendar\">Calendar</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Chips id=\"chips\" v-model=\"value4\" />\n                        <label for=\"chips\">Chips</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputMask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slotChar=\"mm/dd/yyyy\" />\n                        <label for=\"inputmask\">InputMask</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <InputNumber id=\"inputnumber\" v-model=\"value6\" />\n                        <label for=\"inputnumber\">InputNumber</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <div class=\"p-inputgroup\">\n                        <span class=\"p-inputgroup-addon\">\n                            <i class=\"pi pi-user\"></i>\n                        </span>\n                        <span class=\"p-float-label\">\n                            <InputText id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                            <label for=\"inputgroup\">InputGroup</label>\n                        </span>\n                    </div>\n                </div>\n                 <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <CascadeSelect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" optionLabel=\"cname\" optionGroupLabel=\"name\"\n                            :optionGroupChildren=\"['states', 'cities']\" />\n                        <label for=\"multiselect\">CascadeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"dropdown\">Dropdown</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <MultiSelect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" optionLabel=\"name\" />\n                        <label for=\"multiselect\">MultiSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <TreeSelect v-model=\"selectedNode\" :options=\"nodes\"></TreeSelect>\n                        <label for=\"treeselect\">TreeSelect</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Password id=\"password\" v-model=\"value11\" />\n                        <label for=\"password\">Password</label>\n                    </span>\n                </div>\n                <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label\">\n                        <Textarea id=\"textarea\" v-model=\"value10\" rows=\"3\" />\n                        <label for=\"textarea\">Textarea</label>\n                    </span>\n                </div>\n            </div>\n        </div>\n    </div>                    \n</template>\n\n<script>\nimport { ref, onMounted } from 'vue';\nimport CountryService from './service/CountryService';\nimport NodeService from './service/NodeService';\n\nexport default {\n    setup() {\n        onMounted(() => {\n            countryService.value.getCountries().then(data => countries.value = data);\n            nodeService.value.getTreeNodes().then(data => nodes.value = data);\n        })\n        const countryService = ref(new CountryService());\n        const nodeService = ref(new NodeService());\n        const countries = ref();\n        const filteredCountries = ref();\n        const cities = ref([\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ]);\n        const value1 = ref();\n        const value2 = ref();\n        const value3 = ref();\n        const value4 = ref();\n        const value5 = ref();\n        const value6 = ref();\n        const value7 = ref();\n        const value8 = ref();\n        const value9 = ref();\n        const value10 = ref();\n        const value11 = ref();\n        const valueIconLeft = ref();\n        const valueIconRight = ref();\n        const selectedCity = ref();\n        const selectedNode = ref();\n        const nodes = ref();\n        const cascadeCountries = ref([\n            {\n                name: 'Australia',\n                code: 'AU',\n                states: [\n                    {\n                        name: 'New South Wales',\n                        cities: [\n                            {cname: 'Sydney', code: 'A-SY'},\n                            {cname: 'Newcastle', code: 'A-NE'},\n                            {cname: 'Wollongong', code: 'A-WO'}\n                        ]\n                    },\n                    {\n                        name: 'Queensland',\n                        cities: [\n                            {cname: 'Brisbane', code: 'A-BR'},\n                            {cname: 'Townsville', code: 'A-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'Canada', \n                code: 'CA',\n                states: [\n                    {\n                        name: 'Quebec',\n                        cities: [\n                            {cname: 'Montreal', code: 'C-MO'},\n                            {cname: 'Quebec City', code: 'C-QU'}\n                        ]\n                    },\n                    {\n                        name: 'Ontario',\n                        cities: [\n                            {cname: 'Ottawa', code: 'C-OT'},\n                            {cname: 'Toronto', code: 'C-TO'}\n                        ]\n                    },\n                    \n                ]\n            },\n            {\n                name: 'United States',\n                code: 'US',\n                states: [\n                    {\n                        name: 'California',\n                        cities: [\n                            {cname: 'Los Angeles', code: 'US-LA'},\n                            {cname: 'San Diego', code: 'US-SD'},\n                            {cname: 'San Francisco', code: 'US-SF'}\n                        ]\n                    },\n                    {\n                        name: 'Florida',\n                        cities: [\n                            {cname: 'Jacksonville', code: 'US-JA'},\n                            {cname: 'Miami', code: 'US-MI'},\n                            {cname: 'Tampa', code: 'US-TA'},\n                            {cname: 'Orlando', code: 'US-OR'}\n                        ]\n                    },\n                    {\n                        name: 'Texas',\n                            cities: [\n                                {cname: 'Austin', code: 'US-AU'},\n                                {cname: 'Dallas', code: 'US-DA'},\n                                {cname: 'Houston', code: 'US-HO'}\n                            ]\n                        }\n                    ]\n                }\n            ]);\n\n        const searchCountry = (event) => {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    filteredCountries.value = [...countries.value];\n                }\n                else {\n                    filteredCountries.value = countries.value.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        };\n\n        return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, value5, value6, \n            value7, value8, value9, value10, value11, valueIconLeft, valueIconRight, selectedCity, cascadeCountries, searchCountry,\n            nodes, selectedNode }\n    }\n}\n<\\\\/script>\n`\n                },\n                'browser-source': {\n                    tabName: 'Browser Source',\n                    imports: `<script src=\"https://unpkg.com/primevue@^3/autocomplete/autocomplete.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/calendar/calendar.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/chips/chips.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/inputmask/inputmask.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/cascadeselect/cascadeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/multiselect/multiselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/treeselect/treeselect.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/password/password.min.js\"><\\\\/script>\n        <script src=\"https://unpkg.com/primevue@^3/textarea/textarea.min.js\"><\\\\/script>\n        <script src=\"./CountryService.js\"><\\\\/script>\n        <script src=\"./NodeService.js\"><\\\\/script>`,\n                    content: `<div id=\"app\">\n            <div class=\"card\">\n                <div class=\"p-fluid p-grid\">\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputtext id=\"inputtext\" type=\"text\" v-model=\"value1\"></p-inputtext>\n                            <label for=\"inputtext\">InputText</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label p-input-icon-left\">\n                            <i class=\"pi pi-search\"></i>\n                            <p-inputtext id=\"inputtext-left\" type=\"text\" v-model=\"valueIconLeft\"></p-inputtext>\n                            <label for=\"inputtext-left\">Left Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                    <span class=\"p-float-label p-input-icon-right\">\n                            <i class=\"pi pi-search\"></i>\n                            <p-inputtext id=\"inputtext-right\" type=\"text\" v-model=\"valueIconRight\"></p-inputtext>\n                            <label for=\"inputtext-right\">Right Icon</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-autocomplete v-model=\"value2\" :suggestions=\"filteredCountries\" @complete=\"searchCountry($event)\" field=\"name\"></p-autocomplete>\n                            <label for=\"autocomplete\">AutoComplete</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-calendar id=\"calendar\" v-model=\"value3\"></p-calendar>\n                            <label for=\"calendar\">Calendar</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-chips id=\"chips\" v-model=\"value4\"></p-chips>\n                            <label for=\"chips\">Chips</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputmask id=\"inputmask\" v-model=\"value5\" mask=\"99/99/9999\" slot-char=\"mm/dd/yyyy\"></p-inputmask>\n                            <label for=\"inputmask\">InputMask</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-inputnumber id=\"inputnumber\" v-model=\"value6\"></p-inputnumber>\n                            <label for=\"inputnumber\">InputNumber</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <div class=\"p-inputgroup\">\n                            <span class=\"p-inputgroup-addon\">\n                                <i class=\"pi pi-user\"></i>\n                            </span>\n                            <span class=\"p-float-label\">\n                                <p-inputtext id=\"inputgroup\" type=\"text\" v-model=\"value7\" />\n                                <label for=\"inputgroup\">InputGroup</label>\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-cascadeselect id=\"cascadeSelect\" v-model=\"selectedCity\" :options=\"cascadeCountries\" option-label=\"cname\" option-group-label=\"name\"\n                                :option-group-children=\"['states', 'cities']\"></p-cascadeselect>\n                            <label for=\"multiselect\">CascadeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-dropdown id=\"dropdown\" v-model=\"value8\" :options=\"cities\" option-label=\"name\"></p-dropdown>\n                            <label for=\"dropdown\">Dropdown</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-multiselect id=\"multiselect\" v-model=\"value9\" :options=\"cities\" option-label=\"name\">\n                            <label for=\"multiselect\">MultiSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-treeselect v-model=\"selectedNode\" :options=\"nodes\"></p-treeselect>\n                            <label for=\"treeselect\">TreeSelect</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-password id=\"password\" v-model=\"value11\"></p-password>\n                            <label for=\"password\">Password</label>\n                        </span>\n                    </div>\n                    <div class=\"p-field p-col-12 p-md-4\">\n                        <span class=\"p-float-label\">\n                            <p-textarea id=\"textarea\" v-model=\"value10\" rows=\"3\"></p-textarea>\n                            <label for=\"textarea\">Textarea</label>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <script type=\"module\">\n        const { createApp, ref, onMounted } = Vue;\n\n        const App = {\n            setup() {\n                onMounted(() => {\n                    countryService.value.getCountries().then(data => countries.value = data);\n                    nodeService.value.getTreeNodes().then(data => nodes.value = data);\n                })\n                const countryService = ref(new CountryService());\n                const nodeService = ref(new NodeService());\n                const countries = ref();\n                const filteredCountries = ref();\n                const cities = ref([\n                    {name: 'New York', code: 'NY'},\n                    {name: 'Rome', code: 'RM'},\n                    {name: 'London', code: 'LDN'},\n                    {name: 'Istanbul', code: 'IST'},\n                    {name: 'Paris', code: 'PRS'}\n                ]);\n                const value1 = ref();\n                const value2 = ref();\n                const value3 = ref();\n                const value4 = ref();\n                const value5 = ref();\n                const value6 = ref();\n                const value7 = ref();\n                const value8 = ref();\n                const value9 = ref();\n                const value10 = ref();\n                const value11 = ref();\n                const valueIconLeft = ref();\n                const valueIconRight = ref();\n                const selectedCity = ref();\n                const selectedNode = ref();\n                const nodes = ref();\n            const cascadeCountries = ref([\n                {\n                    name: 'Australia',\n                    code: 'AU',\n                    states: [\n                        {\n                            name: 'New South Wales',\n                            cities: [\n                                {cname: 'Sydney', code: 'A-SY'},\n                                {cname: 'Newcastle', code: 'A-NE'},\n                                {cname: 'Wollongong', code: 'A-WO'}\n                            ]\n                        },\n                        {\n                            name: 'Queensland',\n                            cities: [\n                                {cname: 'Brisbane', code: 'A-BR'},\n                                {cname: 'Townsville', code: 'A-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'Canada', \n                    code: 'CA',\n                    states: [\n                        {\n                            name: 'Quebec',\n                            cities: [\n                                {cname: 'Montreal', code: 'C-MO'},\n                                {cname: 'Quebec City', code: 'C-QU'}\n                            ]\n                        },\n                        {\n                            name: 'Ontario',\n                            cities: [\n                                {cname: 'Ottawa', code: 'C-OT'},\n                                {cname: 'Toronto', code: 'C-TO'}\n                            ]\n                        },\n                        \n                    ]\n                },\n                {\n                    name: 'United States',\n                    code: 'US',\n                    states: [\n                        {\n                            name: 'California',\n                            cities: [\n                                {cname: 'Los Angeles', code: 'US-LA'},\n                                {cname: 'San Diego', code: 'US-SD'},\n                                {cname: 'San Francisco', code: 'US-SF'}\n                            ]\n                        },\n                        {\n                            name: 'Florida',\n                            cities: [\n                                {cname: 'Jacksonville', code: 'US-JA'},\n                                {cname: 'Miami', code: 'US-MI'},\n                                {cname: 'Tampa', code: 'US-TA'},\n                                {cname: 'Orlando', code: 'US-OR'}\n                            ]\n                        },\n                        {\n                            name: 'Texas',\n                                cities: [\n                                    {cname: 'Austin', code: 'US-AU'},\n                                    {cname: 'Dallas', code: 'US-DA'},\n                                    {cname: 'Houston', code: 'US-HO'}\n                                ]\n                            }\n                        ]\n                    }\n                ]);\n\n                const searchCountry = (event) => {\n                    setTimeout(() => {\n                        if (!event.query.trim().length) {\n                            filteredCountries.value = [...countries.value];\n                        }\n                        else {\n                            filteredCountries.value = countries.value.filter((country) => {\n                                return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                            });\n                        }\n                    }, 250);\n                };\n\n                return { countryService, countries, filteredCountries, cities, value1, value2, value3, value4, value5, value6, \n                    value7, value8, value9, value10, value11, valueIconLeft, valueIconRight, selectedCity, cascadeCountries, searchCountry,\n                    nodes, selectedNode }\n            },\n            components: {\n                \"p-inputtext\": primevue.inputtext,\n                \"p-inputnumber\": primevue.inputnumber,\n                \"p-autocomplete\": primevue.autocomplete,\n                \"p-calendar\": primevue.calendar,\n                \"p-chips\": primevue.chips,\n                \"p-inputmask\": primevue.inputmask,\n                \"p-cascadeselect\": primevue.cascadeselect,\n                \"p-dropdown\": primevue.dropdown,\n                \"p-multiselect\": primevue.multiselect,\n                \"p-treeselect\": primevue.treeselect,\n                \"p-password\": primevue.password,\n                \"p-textarea\": primevue.textarea\n            }\n        };\n        \n        createApp(App)\n            .use(primevue.config.default)\n            .mount(\"#app\");\n        <\\\\/script>\n`\n                }\n            }\n        }\n    },\n    countryService: null,\n    nodeService: null,\n    created() {\n        this.countryService = new CountryService();\n        this.nodeService = new NodeService();\n    },\n    mounted() {\n        this.countryService.getCountries().then(data => this.countries = data);\n        this.nodeService.getTreeNodes().then(data => this.nodes = data);\n    },\n    methods: {\n        searchCountry(event) {\n            setTimeout(() => {\n                if (!event.query.trim().length) {\n                    this.filteredCountries = [...this.countries];\n                }\n                else {\n                    this.filteredCountries = this.countries.filter((country) => {\n                        return country.name.toLowerCase().startsWith(event.query.toLowerCase());\n                    });\n                }\n            }, 250);\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ntextarea {\n    resize: none;\n}\n</style>"],"sourceRoot":""}]}