{"remainingRequest":"/Users/crocslut/Desktop/Git/primevue/node_modules/babel-loader/lib/index.js!/Users/crocslut/Desktop/Git/primevue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/crocslut/Desktop/Git/primevue/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/crocslut/Desktop/Git/primevue/src/components/treeselect/TreeSelect.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/crocslut/Desktop/Git/primevue/src/components/treeselect/TreeSelect.vue","mtime":1634633311596},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/cache-loader/dist/cjs.js","mtime":1634631121968},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/babel-loader/lib/index.js","mtime":1634631121902},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/cache-loader/dist/cjs.js","mtime":1634631121968},{"path":"/Users/crocslut/Desktop/Git/primevue/node_modules/vue-loader-v16/dist/index.js","mtime":1634631132147}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/crocslut/Desktop/Git/primevue/src/components/treeselect/TreeSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div ref=\"container\" :class=\"containerClass\" @click=\"onClick\">\n        <div class=\"p-hidden-accessible\">\n            <input ref=\"focusInput\" type=\"text\" role=\"listbox\" :id=\"inputId\" readonly :disabled=\"disabled\" @focus=\"onFocus\" @blur=\"onBlur\" @keydown=\"onKeyDown\" :tabindex=\"tabindex\"\n                aria-haspopup=\"true\" :aria-expanded=\"overlayVisible\" :aria-labelledby=\"ariaLabelledBy\"/>\n        </div>\n        <div class=\"p-treeselect-label-container\">\n            <div :class=\"labelClass\">\n                <slot name=\"value\" :value=\"selectedNodes\" :placeholder=\"placeholder\">\n                    <template v-if=\"display === 'comma'\">\n                        {{label || 'empty'}}\n                    </template>\n                    <template v-else-if=\"display === 'chip'\">\n                        <div v-for=\"node of selectedNodes\" class=\"p-treeselect-token\" :key=\"node.key\">\n                            <span class=\"p-treeselect-token-label\">{{node.label}}</span>\n                        </div>\n                        <template v-if=\"emptyValue\">{{placeholder || 'empty'}}</template>\n                    </template>\n                </slot>\n            </div>\n        </div>\n        <div class=\"p-treeselect-trigger\">\n            <slot name=\"indicator\">\n                <span class=\"p-treeselect-trigger-icon pi pi-chevron-down\"></span>\n            </slot>\n        </div>\n        <Teleport :to=\"appendTarget\" :disabled=\"appendDisabled\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\">\n                <div :ref=\"overlayRef\" v-if=\"overlayVisible\" @click=\"onOverlayClick\" :class=\"panelStyleClass\">\n                    <slot name=\"header\" :value=\"modelValue\" :options=\"options\"></slot>\n                    <div class=\"p-treeselect-items-wrapper\" :style=\"{'max-height': scrollHeight}\">\n                        <TSTree :value=\"options\" :selectionMode=\"selectionMode\" @update:selectionKeys=\"onSelectionChange\" :selectionKeys=\"modelValue\"\n                            :expandedKeys=\"expandedKeys\" @update:expandedKeys=\"onNodeToggle\" :metaKeySelection=\"metaKeySelection\"\n                            @node-expand=\"$emit('node-expand', $event)\" @node-collapse=\"$emit('node-collapse', $event)\"\n                            @node-select=\"onNodeSelect\" @node-unselect=\"onNodeUnselect\" />\n                        <div v-if=\"emptyOptions\" class=\"p-treeselect-empty-message\">\n                            <slot name=\"empty\">{{emptyMessageText}}</slot>\n                        </div>\n                    </div>\n                    <slot name=\"footer\" :value=\"modelValue\" :options=\"options\"></slot>\n                </div>\n            </transition>\n        </Teleport>\n    </div>\n</template>\n\n<script>\nimport {ConnectedOverlayScrollHandler,DomHandler,ZIndexUtils} from 'primevue/utils';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Tree from 'primevue/tree';\nimport Ripple from 'primevue/ripple';\n\nexport default {\n    name: 'TreeSelect',\n    emits: ['update:modelValue', 'before-show', 'before-hide', 'change', 'show', 'hide', 'node-select', 'node-unselect', 'node-expand', 'node-collapse'],\n    props: {\n        modelValue: null,\n        options: Array,\n\t\tscrollHeight: {\n\t\t\ttype: String,\n\t\t\tdefault: '400px'\n\t\t},\n\t\tplaceholder: String,\n\t\tdisabled: Boolean,\n        tabindex: String,\n        inputId: String,\n        ariaLabelledBy: null,\n        selectionMode: {\n            type: String,\n            default: 'single'\n        },\n        panelClass: {\n            type: String,\n            default: null\n        },\n        appendTo: {\n            type: String,\n            default: 'body'\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        display: {\n            type: String,\n            default: 'comma'\n        },\n        metaKeySelection: {\n            type: Boolean,\n            default: true\n        }\n    },\n    watch: {\n        modelValue: {\n            handler: function() {\n                if (!this.selfChange) {\n                    this.updateTreeState();\n                }\n                this.selfChange = false;\n            },\n            immediate: true\n        },\n        options() {\n            this.updateTreeState();\n        }\n    },\n    data() {\n        return {\n            focused: false,\n            overlayVisible: false,\n            expandedKeys: {}\n        };\n    },\n    outsideClickListener: null,\n    resizeListener: null,\n    scrollHandler: null,\n    overlay: null,\n    selfChange: false,\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndexUtils.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    mounted() {\n        this.updateTreeState();\n    },\n    methods: {\n        show() {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n        },\n        hide() {\n            this.$emit('before-hide');\n            this.overlayVisible = false;\n        },\n        onFocus() {\n            this.focused = true;\n        },\n        onBlur() {\n            this.focused = false;\n        },\n        onClick(event) {\n            if (!this.disabled && (!this.overlay || !this.overlay.contains(event.target)) && !DomHandler.hasClass(event.target, 'p-treeselect-close')) {\n                if (this.overlayVisible)\n                    this.hide();\n                else\n                    this.show();\n\n                this.$refs.focusInput.focus();\n            }\n        },\n        onSelectionChange(keys) {\n            this.selfChange = true;\n            this.$emit('update:modelValue', keys);\n            this.$emit('change', keys);\n        },\n        onNodeSelect(node) {\n            this.$emit('node-select', node);\n\n            if (this.selectionMode === 'single') {\n                this.hide();\n            }\n        },\n        onNodeUnselect(node) {\n            this.$emit('node-unselect', node);\n        },\n        onNodeToggle(keys) {\n            this.expandedKeys = keys;\n        },\n        onKeyDown(event) {\n            switch(event.which) {\n                //down\n                case 40:\n                    if (!this.overlayVisible && event.altKey) {\n                        this.show();\n                        event.preventDefault();\n                    }\n                break;\n\n                //space\n                case 32:\n                    if (!this.overlayVisible) {\n                        this.show();\n                        event.preventDefault();\n                    }\n                break;\n\n                //enter and escape\n                case 13:\n                case 27:\n                    if (this.overlayVisible) {\n                        this.hide();\n                        event.preventDefault();\n                    }\n                break;\n\n                //tab\n                case 9:\n                    this.hide();\n                break;\n\n                default:\n                break;\n            }\n        },\n        onOverlayEnter(el) {\n            ZIndexUtils.set('overlay', el, this.$primevue.config.zIndex.overlay);\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndexUtils.clear(el);\n        },\n        alignOverlay() {\n            if (this.appendDisabled) {\n                DomHandler.relativePosition(this.overlay, this.$el);\n            }\n            else {\n                this.overlay.style.minWidth = DomHandler.getOuterWidth(this.$el) + 'px';\n                DomHandler.absolutePosition(this.overlay, this.$el);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.isOutsideClicked(event)) {\n                        this.hide();\n                    }\n                };\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                };\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        isOutsideClicked(event) {\n            return !(this.$el.isSameNode(event.target) || this.$el.contains(event.target) || (this.overlay && this.overlay.contains(event.target)));\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        findSelectedNodes(node, keys, selectedNodes) {\n            if (node) {\n                if (this.isSelected(node, keys)) {\n                    selectedNodes.push(node);\n                    delete keys[node.key];\n                }\n\n                if (Object.keys(keys).length && node.children) {\n                    for (let childNode of node.children) {\n                        this.findSelectedNodes(childNode, keys, selectedNodes);\n                    }\n                }\n            }\n            else {\n                for (let childNode of this.options) {\n                    this.findSelectedNodes(childNode, keys, selectedNodes);\n                }\n            }\n        },\n        isSelected(node, keys) {\n            return this.selectionMode === 'checkbox' ? keys[node.key] && keys[node.key].checked : keys[node.key];\n        },\n        updateTreeState() {\n            let keys = {...this.modelValue};\n            this.expandedKeys = {};\n            if (keys && this.options) {\n                this.updateTreeBranchState(null, null, keys);\n            }\n        },\n        updateTreeBranchState(node, path, keys) {\n            if (node) {\n                if (this.isSelected(node, keys)) {\n                    this.expandPath(path);\n                    delete keys[node.key];\n                }\n\n                if (Object.keys(keys).length && node.children) {\n                    for (let childNode of node.children) {\n                        path.push(node.key);\n                        this.updateTreeBranchState(childNode, path, keys);\n                    }\n                }\n            }\n            else {\n                for (let childNode of this.options) {\n                    this.updateTreeBranchState(childNode, [], keys);\n                }\n            }\n        },\n        expandPath(path) {\n            if (path.length > 0) {\n                for (let key of path) {\n                    this.expandedKeys[key] = true;\n                }\n            }\n        }\n    },\n    computed: {\n        containerClass() {\n            return [\n                'p-treeselect p-component p-inputwrapper',\n                {\n                    'p-treeselect-chip': this.display === 'chip',\n                    'p-disabled': this.disabled,\n                    'p-focus': this.focused,\n                    'p-inputwrapper-filled': !this.emptyValue,\n                    'p-inputwrapper-focus': this.focused || this.overlayVisible\n                }\n            ];\n        },\n        labelClass() {\n            return [\n                'p-treeselect-label',\n                {\n                    'p-placeholder': this.label === this.placeholder,\n                    'p-treeselect-label-empty': !this.placeholder && this.emptyValue\n                }\n            ];\n        },\n        panelStyleClass() {\n            return ['p-treeselect-panel p-component', this.panelClass, {\n                'p-input-filled': this.$primevue.config.inputStyle === 'filled',\n                'p-ripple-disabled': this.$primevue.config.ripple === false\n            }];\n        },\n        selectedNodes() {\n            let selectedNodes = [];\n            if (this.modelValue && this.options) {\n                let keys = {...this.modelValue};\n                this.findSelectedNodes(null, keys, selectedNodes);\n            }\n\n            return selectedNodes;\n        },\n        label() {\n            let value = this.selectedNodes;\n            return value.length ? value.map(node => node.label).join(', '): this.placeholder;\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage;\n        },\n        emptyValue() {\n            return !this.modelValue || Object.keys(this.modelValue).length === 0;\n        },\n        emptyOptions() {\n            return !this.options || this.options.length === 0;\n        },\n        appendDisabled() {\n            return this.appendTo === 'self';\n        },\n        appendTarget() {\n            return this.appendDisabled ? null : this.appendTo;\n        }\n    },\n    components: {\n        'TSTree': Tree\n    },\n    directives: {\n        'ripple': Ripple\n    }\n}\n</script>\n\n<style>\n.p-treeselect {\n    display: inline-flex;\n    cursor: pointer;\n    position: relative;\n    user-select: none;\n}\n\n.p-treeselect-trigger {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n}\n\n.p-treeselect-label-container {\n    overflow: hidden;\n    flex: 1 1 auto;\n    cursor: pointer;\n}\n\n.p-treeselect-label  {\n    display: block;\n    white-space: nowrap;\n    cursor: pointer;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.p-treeselect-label-empty {\n    overflow: hidden;\n    visibility: hidden;\n}\n\n.p-treeselect-token {\n    cursor: default;\n    display: inline-flex;\n    align-items: center;\n    flex: 0 0 auto;\n}\n\n.p-treeselect .p-treeselect-panel {\n    min-width: 100%;\n}\n\n.p-treeselect-panel {\n    position: absolute;\n    top: 0;\n    left: 0;\n}\n\n.p-treeselect-items-wrapper {\n    overflow: auto;\n}\n\n.p-fluid .p-treeselect {\n    display: flex;\n}\n</style>\n"],"sourceRoot":""}]}